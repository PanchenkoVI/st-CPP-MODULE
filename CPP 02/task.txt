#===============>
Exercise 00: My First Canonical Class

Turn-in directory :ex00/
Files to turn in : Fixed.class.hpp and Fixed.class.cpp, or Fixed.hpp and Fixed.cpp, or Fixed.h and Fixed.cc.  Pick one, I don’t care unless it’s stupid.
Forbidden functions :None

Вы знаете целые числа, а также числа с плавающей запятой. Как мило.

Пожалуйста, прочтите эту 3-страничную статью (1, 2, 3), чтобы обнаружить, что с вами не так. Давай, читай.

До сегодняшнего дня любые числа, которые вы использовали в своих программах, были в основном целыми числами или числами с плавающей запятой,или любыми их вариантами (short,char,long, double и т. д.). Из вашего предварительного чтения можно с уверенностью предположить, что целые числа и числа с плавающей запятой имеют противоположные характеристики.

Но сегодня все изменится. Вы откроете для себя новый и удивительный тип чисел: числа с фиксированной точкой! Всегда отсутствующие в большинстве языков скалярные типы, фиксированные точечные числа предлагают ценный баланс между производительностью, точностью, диапазоном и точностью, что объясняет, почему эти числа широко используются в графике, звуке или научном программировании.

Поскольку в C++отсутствуют числа с фиксированной точкой, вы собираетесь добавить их сами сегодня. Для начала я бы рекомендовал эту статью из Беркли. Если это хорошо для них, то хорошо и для тебя. Если вы понятия не имеете, что такое Беркли, прочтите этот раздел их страницы в Википедии

Напишите канонический класс для представления чисел с фиксированной точкой

• Private members:
    ◦ Целое число для хранения значения фиксированной точки.
    ◦ Целое число "статическая константа" для хранения количества дробных битов. Эта константа всегда будет литерал 8
• Public members:
    ◦ Конструктор по умолчанию, который инициализирует значение фиксированной точки равным 0.
    ◦ A destructor.
    ◦ A copy constructor.
    ◦ Перегрузка оператора назначения.
    ◦ Функция-член int getRawBits( void ) const;которая возвращает исходное значение значения фиксированной точки.
    ◦ Функция-член void setRawBits( int const row );которая устанавливает исходное значение значения фиксированной точки.

#===============>
Exercise 01: Towards a more usefulfixed point class

Turn-in directory :ex01/
Files to turn in :Fixed.class.hpp and Fixed.class.cpp, or Fixed.hpp andFixed.cpp, or Fixed.h and Fixed.cc.  Pick one, I don’t care unless it’sstupid.
Allowed functions :roundf (from <cmath>)

• Хорошо,ex00 был хорошим началом, но наш класс все еще довольно бесполезен, будучи в состоянии только представлять значение фиксированной точки 0.0. Добавьте в свой класс следующие открытые конструкторы и открытые функции-члены:
    ◦ Конструктор, который принимает постоянное целое число в качестве параметра и преобразует его в соответствующее фиксированное(8) значение точки. Значение дробных битов инициализируется так же, как и в ex00.
    ◦ Конструктор, который принимает постоянную плавающую точку в качестве параметра и преобразует ее в соответствующее фиксированное(8) значение точки. Значение дробных битов инициализируется так же, как и в ex00.
    ◦ Функция-член float toFloat( void ) const;которая преобразует значение с фиксированной точкой в значение с плавающей точкой.
    ◦ Функция-член int toInt( void ) const; которая преобразует значение фиксированной точки в целочисленное значение.
• Вы также добавите следующую перегрузку функций в ваши заголовочные (объявления) и исходные (определения) файлы:
    ◦ Перегрузка оператора « , который вставляет представление с плавающей запятой фиксированного значения точки в выходной поток параметра.